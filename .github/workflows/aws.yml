name: Push-to-EC2

# Trigger deployment only on push to main branch
on:
  push:
    branches:
      - main-DISABLED

jobs:
  deploy:
    name: Deploy to EC2 on main branch push
    runs-on: ubuntu-latest
    steps:
      - name: Get SSH Secrets
        run: |
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}

          secret_value=$(aws secretsmanager get-secret-value --secret-id ${{ secrets.SERVER_SECRET_NAME }} --region ${{ secrets.AWS_REGION }} --query SecretString --output text)

          SSH_HOST=$(echo $secret_value | jq -r '.HOST_DNS')
          SSH_USERNAME=$(echo $secret_value | jq -r '.USERNAME')
          SSH_PRIVATE_KEY=$(echo $secret_value | jq -r '.EC2_SSH_KEY')

          echo "SSH_HOST=$SSH_HOST" >> "$GITHUB_ENV"
          echo "SSH_USERNAME=$SSH_USERNAME" >> "$GITHUB_ENV"
          echo "SSH_PRIVATE_KEY=$SSH_PRIVATE_KEY" >> "$GITHUB_ENV"
        id: secrets_step

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh

          echo "$SSH_PRIVATE_KEY"  | base64 --decode > private_key.pem
          chmod 600 private_key.pem
          ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts

      - name: Execute SSH Command
        run: |
          eval "$(ssh-agent -s)"
          set -x  # Ativa o modo de depuração
          ssh-add private_key.pem

          ssh -i private_key.pem $SSH_USERNAME@$SSH_HOST "

            cd /var/www/html/${{ secrets.TARGET_DIR }};

            sudo git config --global --add safe.directory /var/www/html/${{ secrets.TARGET_DIR }};
            sudo git checkout .;
            sudo git checkout main;
            sudo git pull;
          "
